@using TaskManagement.Model.Dto
@model IEnumerable<TaskManagement.Model.Dto.TaskDto>
@{
	ViewData["Title"] = "Index";
	Layout = "_Layout";
}


<section class="main">

	<div id="drawerAddEditProject" class="drawer">
		<div class="overlay" style="display: none;"></div>
		<div class="drawer-inner">
			@await Html.PartialAsync("_CreateTaskPartial", new TaskManagement.Model.Dto.CreateTaskDto())
		</div>
	</div>

	<div id="drawerViewTask" class="drawer">
		<!-- Content will be loaded dynamically -->
	</div>
	<div id="drawerEditUser" class="drawer"></div>
	<div id="drawerAddComment" class="drawer"></div>

	<div class="container">

		<div class="alerts-main">

			<div class="view-switcher">
				<div class="row">
					<a href="@Url.Action("Index", "Admin")"
					   class="btn-invite col-2 @(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
					   data-view="users">
						Users
					</a>

					<a href="@Url.Action("TaskIndex", "Admin")"
					   class="btn-invite col-2 @(ViewContext.RouteData.Values["Action"].ToString() == "TaskIndex" ? "active" : "")"
					   data-view="tasks" style="margin-left:10px">
						Tasks
					</a>
				</div>
				<div class="alerts-title">
					<!-- Your existing title content -->
				</div>
			</div>
			@if (TempData["SuccessMessage"] != null)
			{
				<div class="alert alert-success alert-dismissible fade show" role="alert">
					@TempData["SuccessMessage"]
					<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
				</div>
			}

			@if (TempData["ErrorMsg"] != null)
			{
				<div class="alert alert-danger alert-dismissible fade show" role="alert">
					@TempData["ErrorMsg"]
					<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
				</div>
			}

			<div class="alerts-title">

				<h1>
					Task List
				</h1>

				<div class="alerts-icon">

					<ul>

						<li>
							<div class="icon">
								<i class="nt-filter" title="Filter" onclick="Common.showFilter(this, '#divFilters')"></i>
								<div id="activeFilters" class="active-filters-container">
									<!-- Active filters will appear here -->
								</div>
								<div id="divFilters" style="z-index:5" class="filter-sorting">
									<div class="filter-sorting-title">
										<p>Filters</p>
										<a title="close" class="close" onclick="Common.hideFilter('#divFilters')">
											<span class="nt-close-o"></span>
										</a>
									</div>

									<form id="taskFilterForm" class="mt-3">
										<div class="row">
											<!-- Assigned To Filter -->
											<div class="col-lg-12 form-floating">
												<select id="filterAssignedTo" name="assignedToId" class="form-control test" style="height: 60px;">
													<option value="">All Users</option>
													@foreach (var user in ViewBag.Users as IEnumerable<UserDto> ?? Enumerable.Empty<UserDto>())
													{
														<option value="@user.Id">@user.FullName</option>
													}
												</select>
												<label for="filterAssignedTo">Assigned To</label>
											</div>

											<!-- Status Filter -->
											<div class="col-lg-12 form-floating">
												<select id="filterStatus" name="statusId" class="form-control test" style="height: 60px;">
													<option value="">All Statuses</option>
													@foreach (var status in ViewBag.TaskStatuses ?? new List<TaskStatus>())
													{

														<option value="@status.Id">@status.Name</option>

													}
												</select>
												<label for="filterStatus">Status</label>
											</div>

											<!-- Date Range -->
											<div class="col-lg-6 form-floating test">
												<input type="date" id="filterStartDate" name="startDate" class="form-control" style="height: 60px;">
												<label for="filterStartDate">From Date</label>
											</div>
											<div class="col-lg-6 form-floating test" style="height: 60px;">
												<input type="date" id="filterEndDate" name="endDate" class="form-control" style="height: 60px;">
												<label for="filterEndDate">To Date</label>
											</div>

											<!-- Search Term -->
											<div class="col-lg-12 form-floating test" style="height: 60px;">
												<input type="text" id="filterSearchTerm" name="searchTerm" class="form-control" placeholder="Search tasks...">
												<label for="filterSearchTerm">Search</label>
											</div>
										</div>
									</form>

									<div class="apply-botttom">
										<a class="cancel" onclick="resetTaskFilters()">
											<span class="nt-refresh"></span>
											Reset
										</a>
										<a class="btn-apply" onclick="applyTaskFilters()">
											Apply Filter
										</a>
									</div>
								</div>
							</div>
						</li>

						<li>
							<div class="icon">
								<i class="nt-sort" title="Sort" onclick="Common.showFilter(this, '#divSorting')"></i>
								<div id="divSorting" style="z-index:5" class="filter-sorting">
									<div class="filter-sorting-title">
										<p>Sort by</p>
										<a title="close" class="close" onclick="Common.hideFilter('#divSorting')">
											<span class="nt-close-o"></span>
										</a>
									</div>

									<div class="form-tabs">
										<ul class="ass-des">
											<li class="active" onclick="setSortDirection('asc')">Ascending</li>
											<li onclick="setSortDirection('desc')">Descending</li>
										</ul>

										<div class="form-check mb-3">
											<input id="rbDueDate" class="form-check-input" type="radio" name="sortListing" value="DueDate" checked>
											<label class="form-check-label" for="rbDueDate">Due Date</label>
										</div>

										<div class="form-check mb-3">
											<input id="rbCreatedDate" class="form-check-input" type="radio" name="sortListing" value="CreatedAt">
											<label class="form-check-label" for="rbCreatedDate">Created Date</label>
										</div>

										<div class="form-check mb-3">
											<input id="rbTitle" class="form-check-input" type="radio" name="sortListing" value="Title">
											<label class="form-check-label" for="rbTitle">Title</label>
										</div>

										<div class="form-check mb-5">
											<input id="rbStatus" class="form-check-input" type="radio" name="sortListing" value="Status">
											<label class="form-check-label" for="rbStatus">Status</label>
										</div>


									</div>

									<div class="apply-botttom">
										<a class="cancel" onclick="resetSorting()">
											<span class="nt-refresh"></span>
											Reset
										</a>
										<a class="btn-apply" onclick="applySorting()">
											Apply Sort
										</a>
									</div>
								</div>
							</div>
						</li>

						<li class="invite">
							<a title="invite" class="btn-invite"
							   onclick="Common.openDrawer('#drawerAddEditProject')">
								Add Task
							</a>
						</li>

					</ul>

				</div>

			</div>
			<div id="taskListContainer">
				@Html.Partial("_TaskListPartial", Model)
			</div>
			
		</div>

	</div>

</section>

<div class="loading-wrapper">
	<div class="loading-content">
	</div>
	<div class="loading-text position-absolute">
		Loading...
	</div>
</div>

@section Scripts {
	<script src="~/assets/js/JavaScript.js"></script>

	<script>
		// Wait for the DOM to load
		document.addEventListener("DOMContentLoaded", function () {
			const alerts = document.querySelectorAll('.alert');
			if (alerts.length > 0) {
				setTimeout(() => {
					alerts.forEach(alert => {
						alert.classList.remove('show');
						alert.classList.add('fade');
						// Optional: fully remove from DOM after fade
						setTimeout(() => alert.remove(), 500);
					});
				}, 2500); // Delay in milliseconds (2.5 seconds)
			}
		});
	</script>
}

